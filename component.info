request MemoryRead():
    bool is_write
    int8 channel
    int8 rank
    int8 bank
    int32 row
    int16 column

component Bank<>:
    int32 row_buffer
    clock read_ready
    clock write_ready
    clock act_ready
    clock pre_ready
    
    activate(clock now, row) {
        row_buffer  = row;
        read_ready  = now + t_act_read;
        write_ready = now + t_act_write;
        act_ready   = now + t_act_act;
        pre_ready   = now + t_act_pre;
    }
    
    precharge(clock) {
        row_buffer  = -1;
        read_ready  = now + t_act_read;
        write_ready = now + t_act_write;
        act_ready   = now + t_act_act;
        pre_ready   = now + t_act_pre;
    }
    
    read(clock, column) {
        read_ready  = now + t_read_read;
        write_ready = now + t_read_write;
        act_ready   = now + t_read_act;
        pre_ready   = now + t_read_pre;
    }
    
    write(clock, column) {
        read_ready  = now + t_write_read;
        write_ready = now + t_write_write;
        act_ready   = now + t_write_act;
        pre_ready   = now + t_write_pre;
    }
    
    cycle(clock) {}

component Rank<n_bank>:
    int32 low_power_mode
    clock idle_since
    Bank<> banks[n_bank]

component Channel(n_rank, n_bank):
    Rank<n_bank> ranks[n_rank]
    clock command_ready
    clock data_ready

component Controller(n_channel, n_rank, n_bank):
    Channel<n_rank, n_bank> channel[n_channel]

    cycle(clock) {
    }